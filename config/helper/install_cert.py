#!/usr/bin/python
import os, sys, time, string, subprocess

""" Script to copy SSL cert generated by eprocess360 to apache2
    directory and restart the server. Runs as setuid root so PHP can
    make this happen without direct root access. Sleep-waits for the
    PHP process (identified by the PID in argv[2]) to exit before 
    performing the server restart - I don't think I need to explain
    why.
"""

CERT_NAME = 'e360cert.pem'
APACHE_SSL_DIR = '/etc/apache2/ssl/'
WAIT_TIMEOUT = 60

def main():
    this_dir = os.path.dirname(os.path.realpath(__file__))
    ssl_dir = this_dir[:string.index(this_dir, 'helper')]
    cert_file = ssl_dir + CERT_NAME

    try:
        pid = int(sys.argv[2])
        timed_out = False
        start_time = time.time()

        while check_process(pid) and not timed_out:
            if time.time() - start_time > WAIT_TIMEOUT:
                timed_out = True
            else:
                time.sleep(1)

        if not timed_out:
            do_install(cert_file)

    except IndexError:
        pass

def do_install(cert_file):
    if os.path.isfile(cert_file):
        subprocess.call(['cp', cert_file, APACHE_SSL_DIR])
        subprocess.call(['/usr/sbin/apache2ctl', 'restart'])


def check_process(pid):
    return os.path.exists('/proc/' + str(pid))

if __name__ == '__main__':
    main()
